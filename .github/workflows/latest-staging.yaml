name: Staging Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - staging

jobs:
  build-and-push:
    if: github.event.repository.fork == false
    environment:
      name: "staging"
      url: ${{ vars.URL }}
    name: Build for staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java with maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Create application-staging.properties
        run: |
          echo "spring.profiles.active=staging" > src/main/resources/application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" | base64 --decode > src/main/resources/application-staging.properties

      - name: Run the Maven verify phase
        run: mvn clean install -Dmaven.test.skip=true

      - name: copy service file
        run: |
          cp .github/scripts/java_staging_app.service target/
          # cp ~/flyway.conf target/
          # cp .env target/

      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "target/*"
          target: /home/teamjava/hng_boilerplate_java_web

      - name: Add SSH Key to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
        env:
          SSH_HOST: ${{ secrets.HOST }}

      - name: SSH into Server and Execute Command
        run: |
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST "\
          cd ~/hng_boilerplate_java_web && \
          git fetch origin staging && \
          git stash && \
          git checkout staging && \
          git pull && \
          sudo cp .github/scripts/java_staging_app.service /etc/systemd/system && \
          mvn flyway:repair && \
          mvn clean install -Dmaven.test.skip=true && \
          sudo systemctl daemon-reload && \
          sudo systemctl restart java_staging_app.service && \
          exit"
        env:
          SSH_HOST: ${{ secrets.HOST }}
          SSH_USERNAME: ${{ secrets.USERNAME }}
          SSH_PASSWORD: ${{ secrets.PASSWORD }}
