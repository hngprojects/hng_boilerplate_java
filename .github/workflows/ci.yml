name: CI

on:
  push:
    branches: [dev, staging, main]
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches: [dev, staging, main]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
      
    services:
        postgres:  
          image: postgres:latest
          env:
            POSTGRES_USER: ${{ secrets.POSTGRES_USERNAME }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          ports:
            - 5432:5432
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

        rabbitmq:
          image: rabbitmq:3-management
          env:
            RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_USERNAME }}
            RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_PASSWORD }}
          ports:
            - 5672:5672
            - 15672:15672  # Management plugin port
          options: >-
            --health-cmd "rabbitmqctl node_health_check"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    steps:
      - name: Checkout repository base
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      # Create configuration files
      - name: Create .env file
        run: |
          echo "DB_CONNECTION_STRING=postgresql://localhost:${{ secrets.POSTGRES_PORT }}/${{ secrets.POSTGRES_DB }}" >> .env
          echo "DB_USERNAME=${{ secrets.POSTGRES_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "RABBITMQ_HOST=localhost" >> .env
          echo "RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}" >> .env
          echo "RABBITMQ_USERNAME=${{ secrets.RABBITMQ_USERNAME }}" >> .env
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> .env
          echo "QUEUE_EMAIL=emailQueue" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "EXCHANGE_KEY=${{ secrets.EXCHANGE_KEY }}" >> .env
          echo "ROUTING_KEY=${{ secrets.ROUTING_KEY }}" >> .env
          echo "ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" >> .env
          echo "AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> .env
          echo "SMS_NUMBER=${{ secrets.OUTGOING_SMS_NUMBER }}" >> .env

      - name: Create application.properties
        uses: ./.github/workflows/create-application-properties

      - name: Download Dependencies
        run: mvn dependency:resolve

      - name: Build the application
        run: mvn clean install

      - name: Start Application
        run: nohup java -jar target/hng-java-boilerplate-0.0.1-SNAPSHOT.jar &

      - name: Wait for Application to be Ready
        run: sleep 30

      - name: Unit and Integration Testing
        run: mvn -B test

      - name: Archive Test Result
        uses: actions/upload-artifact@v3
        if: always()
        with: 
          name: test-results
          path: target/*.jar
