name: CI

on:
  push:
    branches: [dev, staging, main]
  pull_request:
    branches: [dev, staging, main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
          
    services:
        postgres:  
          image: postgres:latest
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            POSTGRES_DB: postgres
          ports:
            - 5432:5432
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      # Create configuration files
      - name: Create .env file
        run: |
          echo "DB_CONNECTION_STRING=postgresql://localhost:${{secrets.POSTGRES_PORT}}/${{secrets.POSTGRES_DB}}" >> .env
          echo "DB_USERNAME=${{secrets.POSTGRES_USER}}" >> .env
          echo "DB_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >> .env
          echo "RABBITMQ_HOST=${{ secrets.RABBITMQ_HOST }}" >> .env
          echo "RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}" >> .env
          echo "RABBITMQ_USERNAME=${{ secrets.RABBITMQ_USERNAME }}" >> .env
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
      - name: Create application.properties
        uses: ./.github/workflows/create-application-properties

      - name: Download Dependencies
        run: mvn dependency:resolve

      - name: Build the application
        run: mvn clean install

      - name: List target directory contents
        run: ls -l target

      - name: Start Application
        run: nohup java -jar target/hng-java-boilerplate-0.0.1-SNAPSHOT.jar &

      - name: Wait for Application to be Ready
        run: sleep 30

      - name: Unit and Integration Testing
        run: mvn -B test

      - name: Archive Test Result
        uses: actions/upload-artifact@v3
        if: always()
        with: 
          name: test-results
          path: target/*.jar
