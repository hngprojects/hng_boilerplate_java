name: Java Deployment Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
        postgres:  
          image: postgres:latest
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            POSTGRES_DB: postgres
          ports:
            - 5432:5432
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
      - name: Install Dependencies
        run: mvn clean install
      - name: Build the application
        run: mvn -B package --file pom.xml


#   unit-test:
#     needs: build
#     name: Unit Test
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up JDK
#         uses: actions/setup-java@v3
#         with:
#           java-version: 17
#           distribution: temurin
#       - name: Install Dependencies
#         run: mvn dependency:resolve
#       - name: Unit Testing
#         run: mvn -B test
#       - name: Archive Test Result
#         uses: actions/upload-artifact@v3
#         if: always()
#         with: 
#           name: test-results
#           path: target/test-results


  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    # environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add SSH Key to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: SSH into Server and Execute Command
        run: |
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST "\
          cd ~/java_boiler_plate && git checkout dev && git pull && ls && ./deploy.sh && \
          exit"
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
