name: Staging-Deployment

on:
  push:
    branches: [staging]

jobs:
  build:
    name: Build for staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java with maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Create .env file
        run: |
          echo "DB_CONNECTION_STRING=postgresql://localhost:5432/${{ secrets.POSTGRES_DB }}" > .env
          echo "DB_USERNAME=${{ secrets.POSTGRES_USER }}" >> .env
          echo "DB_NAME=${{ secrets.POSTGRES_DB }}" >> .env
          echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env 
          echo "RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}" >> .env
          echo "RABBITMQ_USERNAME=${{ secrets.RABBITMQ_USERNAME }}" >> .env
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> .env
          echo "RABBITMQ_HOST=${{ secrets.RABBITMQ_DEV_HOST }}" >> .env

      - name: Create application.properties
        uses: ./.github/workflows/create-application-properties

      - name: Create ~/flyway.conf
        uses: ./.github/workflows/create-flyway-conf

      - name: Run the Maven verify phase
        run: mvn clean install -Dmaven.test.skip=true

      - name: copy service file
        run: cp .github/java_staging_app.service target/

      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          # port: ${{ secrets.PORT }}
          source: "target/*"
          target: boilerplate/staging

      # - name: Add SSH Key to Known Hosts
      #   run: |
      #     mkdir -p ~/.ssh
      #     ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      #   env:
      #     SSH_HOST: ${{ secrets.SSH_HOST }}

      # - name: SSH into Server and Execute Command
      #   run: |
      #     sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST "\
      #     cd ~/hng_boilerplate_java_web && git fetch origin staging && git stash && git checkout staging && git pull && chmod +x deploy.sh && ./deploy.sh && sudo systemctl start java_staging_app.service && \
      #     exit"
      #   env:
      #     SSH_HOST: ${{ secrets.SSH_HOST }}
      #     SSH_USERNAME: ${{ secrets.STAGING_SSH_USERNAME }}
      #     SSH_PASSWORD: ${{ secrets.STAGING_SSH_PASSWORD }}

  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion=='failure' }}
    steps:
      - run: echo "Triggering the Workflow Failed"