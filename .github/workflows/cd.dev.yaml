name: Dev Deployment

on:
  workflow_dispatch:

jobs:
  build-and-push:
    if: github.event.repository.fork == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create application-dev.properties
        run: echo ${{ secrets.APPLICATION_DEV_PROPERTIES }} | base64 --decode > src/main/resources/application-dev.properties
                  
      - name: Set up Docker CLI
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          push: false
          tags: java_dev:latest
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save and compress Docker image
        run: |
          docker save java_dev:latest | gzip > java_dev.tar.gz
      
      - name: Copy compressed image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.DEV_SSH_USERNAME }}
          password: ${{ secrets.DEV_SSH_PASSWORD }}
          source: "java_dev.tar.gz"
          target: "/tmp"

      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.DEV_SSH_USERNAME }}
          password: ${{ secrets.DEV_SSH_PASSWORD }}
          script: |
            cd ~/hng_boilerplate_java_web
            git add .
            git stash
            git checkout dev
            git pull origin dev
            gunzip -c /tmp/java_dev.tar.gz | docker load
            rm -f /tmp/java_dev.tar.gz
            docker compose -f compose.yaml -f compose/compose.dev.yaml up -d